import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'

version = '1.0'
sourceSets.main.java.srcDirs = ["src/"]

ext {
    cubesVersion = '0.0.1'
    modClass = 'example.MyMod'
    modName = 'MyMod'
    assetsFolder = 'assets/'
    androidSdkDir = System.getenv("ANDROID_HOME")

    if (androidSdkDir == null) {
        Properties localProps = new Properties()
        localProps.load(new FileInputStream(file('local.properties')))

        androidSdkDir = localProps['sdk.dir']
    }
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    maven { url "https://raw.githubusercontent.com/ictrobot/mvn-repo/master/snapshots" }
    maven { url "https://raw.githubusercontent.com/ictrobot/mvn-repo/master/releases" }
}

dependencies {
    compile "ethanjones.cubes:core:$cubesVersion"
}

jar.archiveName = 'mod.jar'

task modDex(dependsOn: jar) << {
    new File(getBuildDir(), '/libs/').mkdirs()
    def props = new Properties()
    props.load(new URL("https://raw.githubusercontent.com/ictrobot/mvn-repo/master/ethanjones/cubes/core/$cubesVersion/core-$cubesVersion-properties.properties").newReader())
    def buildToolsVersion = props.getProperty('androidBuildToolsVersion');

    if (!new File("${androidSdkDir}/build-tools/${buildToolsVersion}/").exists()) {
        throw new GradleException("You need build-tools ${buildToolsVersion}")
    }

    String cmdExt = Os.isFamily(Os.FAMILY_WINDOWS) ? '.bat' : ''

    exec {
        commandLine "${androidSdkDir}/build-tools/${buildToolsVersion}/dx${cmdExt}", '--dex',
                "--output=${buildDir}/libs/mod.dex",
                "--verbose",
                "${buildDir}/libs/mod.jar"
    }
}

task modProperties {
    new File(getBuildDir(), '/libs/').mkdirs()
    def props = new Properties()
    props.setProperty('modClass', modClass)
    props.setProperty('modName', modName)
    props.store(new File(getBuildDir(), '/libs/mod.properties').newPrintWriter(), null)
}

task cm(type: Zip, dependsOn: ['modProperties', 'modDex', 'jar']) {
    destinationDir = new File(getBuildDir(), '/libs/')
    archiveName = modName + '.cm'
    from(new File(getBuildDir(), '/libs/mod.jar'))
    from(new File(getBuildDir(), '/libs/mod.dex'))
    from(new File(getBuildDir(), '/libs/mod.properties'))
    into('assets') {
        from(new File(assetsFolder))
    }
}